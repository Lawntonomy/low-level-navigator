name: C++ CI for Raspberry Pi Pico

on:
  push:
    branches:
      - '**'  # Matches any branch
  pull_request:
    branches:
      - 'master'  # Matches any branch for pull requests

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1.9

      - name: Install cpplint
        run: pip install cpplint

      - name: Lint C++ code
        run: find . -name "*.cpp" -o -name "*.h" | xargs cpplint

  build:
    runs-on: ubuntu-latest
    needs: lint
    if: always()  # This allows the build to run regardless of the lint job's result
    outputs:
      build_files: ${{ steps.build_output.outputs.artifact-id }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake gcc-arm-none-eabi

      - name: Set up toolchain path
        run: echo "PICO_TOOLCHAIN_PATH=/usr/bin" >> $GITHUB_ENV

      - name: Clone Pico SDK
        run: |
          git clone -b master https://github.com/raspberrypi/pico-sdk.git
          echo "PICO_SDK_PATH=$(pwd)/pico-sdk" >> $GITHUB_ENV

      - name: Create build directory
        run: mkdir build && cd build

      - name: Build project
        id: build_output
        run: |
          cd build
          cmake .. -DPICO_SDK_PATH=$PICO_SDK_PATH -DPICO_TOOLCHAIN_PATH=$PICO_TOOLCHAIN_PATH
          make

      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: Binaries
          path: build/low-level-navigator.uf2 

      

